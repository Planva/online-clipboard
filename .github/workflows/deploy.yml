name: Deploy to Cloudflare

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-cloudflare
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      # 固定 Wrangler v4，避免 v3 行为差异
      - name: Install Wrangler v4
        run: npm i -D wrangler@4.42.2

      - name: Build frontend
        run: npm run build

      # —— D1 迁移：先列出、再应用（幂等） —— #
      - name: List D1 migrations (remote)
        run: npx wrangler d1 migrations list web_server --remote

      - name: Apply D1 migrations (remote)
        run: npx wrangler d1 migrations apply web_server --remote

      # 可选种子：如果文件存在就执行（幂等）
      - name: Seed D1 (remote) [optional]
        if: ${{ hashFiles('migrations/web_server/0002_seed.sql') != '' }}
        run: npx wrangler d1 execute web_server --remote --file=./migrations/web_server/0002_seed.sql

      # —— R2 桶幂等：已存在则跳过 —— #
      - name: Ensure R2 bucket exists
        run: |
          if npx wrangler r2 bucket list | grep -q '^onlineclipboard-files$'; then
            echo "R2 bucket already exists"
          else
            npx wrangler r2 bucket create onlineclipboard-files
          fi

      - name: Whoami (sanity check)
        run: npx wrangler whoami

      - name: Deploy Worker
        run: npx wrangler deploy --minify

      # （可选）部署后抓取一段边缘日志，便于排查
      - name: Tail logs (20s, optional)
        if: ${{ always() }}
        run: timeout 20s npx wrangler tail --format=pretty || true
